{"version":3,"sources":["components/Footer.tsx","components/Header.tsx","utils/constants.ts","components/Sidebar.tsx","components/Layout.tsx","components/character-card/CharacterCard.tsx","services/httpService.ts","routes/index.ts","views/characters/Characters.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","className","Header","standardImageVariants","APP_ROUTES","Sidebar","history","useHistory","handleClick","path","push","onClick","Layout","children","CharacterCard","character","imgSrc","thumbnail","extension","src","alt","name","get","url","paramsObj","a","axios","params","ts","apikey","hash","res","data","console","error","Routes","component","queryClient","useQueryClient","loaderRef","useRef","useState","search","setSearch","getCharacters","useCallback","pageParam","offset","limit","nameStartsWith","undefined","useInfiniteQuery","getNextPageParam","lastPage","total","isLoading","fetchNextPage","hasNextPage","handleObserver","entries","isIntersecting","useEffect","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","then","setQueryData","pages","length","pageParams","JSON","stringify","type","onKeyPress","e","code","currentTarget","value","placeholder","map","page","results","index","id","ref","style","textAlign","QueryClient","defaultOptions","queries","cacheTime","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","App","exact","to","QueryClientProvider","client","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.247056dd.chunk.js","sourcesContent":["export default function Footer() {\n  return (\n    <footer className=\"tw-sticky tw-bottom-0 tw-w-full tw-bg-black tw-p-1\">\n      <div className=\"tw-text-center tw-text-white tw-bg-primaryRed tw-p-1 tw-w-80 tw-ml-auto\">\n        Data Provided By Marvel. &copy; 2021 MARVEL\n      </div>\n    </footer>\n  );\n}\n","export default function Header() {\n  return (\n    <header className=\"tw-sticky tw-top-0 tw-bg-black tw-p-2\">\n      <h3 className=\"tw-text-center tw-text-white tw-bg-primaryRed tw-w-40 tw-p-2 tw-mx-auto\">\n        Marvel Explorer\n      </h3>\n    </header>\n  );\n}\n","export const portraitImageVariants = {\n  small: 'portrait_small',\n  medium: 'portrait_medium',\n  xlarge: 'portrait_xlarge',\n  fantastic: 'portrait_fantastic',\n  uncanny: 'portrait_uncanny',\n  incredible: 'portrait_incredible',\n};\n\nexport const standardImageVariants = {\n  small: 'standard_small',\n  medium: 'standard_medium',\n  large: 'standard_large',\n  xlarge: 'standard_xlarge',\n  fantastic: 'standard_fantastic',\n  amazing: 'standard_amazing',\n};\n\nexport const landscapeImageVariants = {\n  small: 'landscape_small',\n  medium: 'landscape_medium',\n  large: 'landscape_large',\n  xlarge: 'landscape_xlarge',\n  fantastic: 'landscape_amazing',\n  incredible: 'landscape_incredible',\n};\nexport const APP_ROUTES = {\n  characters: '/characters',\n};\n\nexport const SIDEBAR_LABELS = {\n  characters: 'Characters',\n};\n","import { useHistory } from 'react-router-dom';\nimport { APP_ROUTES } from '../utils/constants';\n\nexport default function Sidebar() {\n  const history = useHistory();\n\n  const handleClick = (path: string) => {\n    history.push(path);\n  };\n\n  return (\n    <aside className=\"tw-bg-primaryRed tw-p-2 tw-min-h-screen\">\n      <div\n        className=\"tw-px-20 tw-py-4 tw-text-white tw-cursor-pointer\"\n        onClick={() => handleClick(APP_ROUTES.characters)}\n      >\n        Characters\n      </div>\n      <div\n        className=\"tw-px-20 tw-py-4 tw-text-white tw-cursor-pointer\"\n        onClick={() => handleClick('test')}\n      >\n        Comics\n      </div>\n      <div\n        className=\"tw-px-20 tw-py-4 tw-text-white tw-cursor-pointer\"\n        onClick={() => handleClick('test')}\n      >\n        Creators\n      </div>\n      <div\n        className=\"tw-px-20 tw-py-4 tw-text-white tw-cursor-pointer\"\n        onClick={() => handleClick('test')}\n      >\n        Events\n      </div>\n      <div\n        className=\"tw-px-20 tw-py-4 tw-text-white tw-cursor-pointer\"\n        onClick={() => handleClick('test')}\n      >\n        Series\n      </div>\n      <div\n        className=\"tw-px-20 tw-py-4 tw-text-white tw-cursor-pointer\"\n        onClick={() => handleClick('test')}\n      >\n        Stories\n      </div>\n    </aside>\n  );\n}\n","import Footer from './Footer';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\n\nexport default function Layout({ children }: { children: JSX.Element }) {\n  return (\n    <>\n      <Header />\n      <div className=\"tw-flex tw-min-h-screen\">\n        <div className=\"tw-fixed tw-w-60\">\n          <Sidebar />\n        </div>\n        <main className=\"tw-bg-secondaryRed tw-ml-60\">{children}</main>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import { ICharacterCardProps } from '.';\nimport { standardImageVariants } from '../../utils/constants';\n\nexport default function CharacterCard({ character }: ICharacterCardProps) {\n  const imgSrc = `\n    ${character.thumbnail.path}/${standardImageVariants.large}.${character.thumbnail.extension}\n  `;\n  return (\n    <div className=\"tw-w-32\">\n      <img src={imgSrc} alt={character.name} />\n      <h4>{character.name}</h4>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst get = async (url: string, paramsObj: Object) => {\n  try {\n    const res = await axios.get(url, {\n      params: {\n        ts: 1,\n        apikey: '96c29bda100ea829ab3f03af3ffbc182',\n        hash: '02c5c0c8e08cc91e335fed164e660d65',\n        ...paramsObj,\n      },\n    });\n    return res.data;\n  } catch (err) {\n    return console.error(err);\n  }\n};\n\nexport { get };\n","import Characters from '../views/characters';\nimport { APP_ROUTES, SIDEBAR_LABELS } from '../utils/constants';\n\ninterface IRoute {\n  name: string;\n  path: string;\n  component: () => JSX.Element;\n}\n\nconst Routes: IRoute[] = [\n  {\n    name: SIDEBAR_LABELS.characters,\n    path: APP_ROUTES.characters,\n    component: Characters,\n  },\n];\n\nexport default Routes;\n","import {\n  KeyboardEventHandler,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useInfiniteQuery, useQueryClient } from 'react-query';\n\nimport { IGetCharacterResponse } from '.';\nimport CharacterCard from '../../components/character-card';\nimport { get } from '../../services/httpService';\n\nconst limit = 32;\n\nexport default function Characters() {\n  const queryClient = useQueryClient();\n  const loaderRef = useRef<HTMLDivElement>(null);\n  const [search, setSearch] = useState('');\n\n  const getCharacters = useCallback(\n    ({ pageParam = 0 }) =>\n      get('https://gateway.marvel.com/v1/public/characters', {\n        offset: pageParam,\n        limit: limit,\n        nameStartsWith: search ? search : undefined,\n      }),\n    [search],\n  );\n\n  const { data, error, isLoading, fetchNextPage, hasNextPage } =\n    useInfiniteQuery<IGetCharacterResponse>('getCharacters', getCharacters, {\n      getNextPageParam: (lastPage) => {\n        if (\n          lastPage.data.offset > lastPage.data.total ||\n          lastPage.data.limit > lastPage.data.total\n        ) {\n          return undefined;\n        }\n        return lastPage.data.offset + limit;\n      },\n    });\n\n  const handleObserver = useCallback(\n    (entries) => {\n      if (hasNextPage) {\n        const target = entries[0];\n        if (target.isIntersecting) {\n          fetchNextPage();\n        }\n      }\n    },\n    [fetchNextPage, hasNextPage],\n  );\n\n  const handleSearch: KeyboardEventHandler<HTMLInputElement> = (e) => {\n    if (e.code === 'Enter') setSearch(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    const option = {\n      root: null,\n      rootMargin: '20px',\n      threshold: 0,\n    };\n    const observer = new IntersectionObserver(handleObserver, option);\n    if (loaderRef.current) observer.observe(loaderRef.current);\n  }, [handleObserver]);\n\n  useEffect(() => {\n    fetchNextPage({ pageParam: 0 }).then((res) => {\n      queryClient.setQueryData('getCharacters', () => ({\n        pages: [res.data?.pages[res.data?.pages.length - 1]],\n        pageParams: res.data?.pageParams[res.data?.pageParams.length - 1],\n      }));\n    });\n  }, [fetchNextPage, queryClient, search]);\n\n  return (\n    <div>\n      {error ? (\n        <div>{JSON.stringify(error)}</div>\n      ) : isLoading ? (\n        <div>Loading Data...</div>\n      ) : (\n        <>\n          <input\n            type=\"search\"\n            onKeyPress={handleSearch}\n            placeholder=\"press enter to search\"\n            className=\"tw-mx-8 tw-my-2 tw-float-right tw-w-40 tw-p-2 tw-border tw-border-black tw-border-solid\"\n          />\n          <article className=\"tw-m-8 tw-flex tw-flex-wrap tw-gap-x-4 tw-gap-y-4 tw-clear-both\">\n            {data?.pages.map((page) => {\n              return page.data.results.map((character, index) => {\n                return (\n                  <CharacterCard\n                    key={`${character.id} + ${index}`}\n                    character={character}\n                  />\n                );\n              });\n            })}\n          </article>\n        </>\n      )}\n      <div ref={loaderRef} style={{ textAlign: 'center' }}>\n        {hasNextPage ? 'Loading More Data...' : ''}\n      </div>\n    </div>\n  );\n}\n","import { QueryClient, QueryClientProvider } from 'react-query';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport Routes from './routes';\nimport { APP_ROUTES } from './utils/constants';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      cacheTime: 1000 * 60 * 60 * 24,\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false,\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to={APP_ROUTES.characters} />\n          </Route>\n          <QueryClientProvider client={queryClient}>\n            {Routes.map((route) => (\n              <Route\n                key={route.name}\n                path={route.path}\n                component={route.component}\n              />\n            ))}\n          </QueryClientProvider>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}